
Castro is the beginnings of my havannah player/solver. For now it understands the rules of the game
and can solve certain simple positions, but is not particularly good at solving positions yet.

The board is represented as a vector of len (2*s-1)^2, and treated as a 2d vector. The internal
coordinate system is the same as HGui, not the standard that littlegolem uses. Each cell includes
information about how it is connected to other cells, including to the edges and corners. It uses
a format similar to the disjoint set, with extensions so the root node of a group knows what it's
connected to. As moves are made, this information is updated. By using path compression, it is very
fast to figure out which group a cell is part of, but makes it hard to undo a move, so undo is
currently only supported by reverting to an old copy of the board. Rings are only checked for when
they could possibly appear, ie when a cell connects to the same group twice at the same time. It
detects rings by doing a backtracking algorithm, realizing that a ring must be at least of size 6,
and has the property that it will never make any sharp turns. If the backtracking manages to get back
to the start cell, while not taking any sharp turns, clearly there is a ring.

To interface with HGui, I have a command line flag that flips the coordinate system to HGui's. To make
it easy to write tests, there is a gtp command to log the commands to a file in the standard format.
To make it easy to understand what is happening, the verbose flag or command output the board and 
results after each move.

The solver so far is just a simple iterative deepening alpha-beta search without transposition table.
It doesn't enforce the time limit very well, just doesn't start another depth if it ran out of time
during the previous run. I haven't written the part to return the best move yet, and certainly not
the best path/PV.

Timo Ewalds

