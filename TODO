

prior knowledge
- split knowledge factor from experience
- criticality
- virtual connect pattern
- local reply is good
  - use weighted random choices instead of uniform random:
    - different weights for black vs white?
    - values based on:
      - empty, direct neighbour, potential virtual connection neighbours, 2nd corner
      - virtual connection points (0,1,2)
      - edge/corner, near edge/corner, empty space
    - analyze games to determine these values
    - a position near the edge/corner defines virtual connections to the wall

Minimax values in the UCT tree

Recency weighted experience:
- use moving averages instead of simple averages to deal with drift:
  - current: v += 1/k*(nv - v); k++;
  - new:     v += 1/a*(nv - v); k++; where a = (k < 100 ? k : 100); or some other value

Time control
- quiecense search - if the highest winrate != most played, keep simulating until it is
- assign time based on expected remaining moves based on roll-out stats


